ZZ, :wq, or :xa to save and quit
ZQ or :q! to quit disregarding changes
:w FILE to save as FILE
:!CMD to run CMD and see output (or C-z to background vim)
:r FILE/URL to dump contents of file at cursor, or :r !CMD for CMD output
:help TOPIC for help on TOPIC
<Esc> to enter insert mode
zz to center cursor/line, zt to top, zb to bottom

writing text:
    i to enter insert mode at char, I at first non-whitespace char
    a to append to cursor, A to append to EOL
    o to open line below and insert, O to open line above and insert

changing/manipulating text:
    c with a motion deletes text and enters insert mode
    C deletes to EOL then enters insert mode
    rCHAR to replace highlighted char with CHAR
    R to start replacing several chars, <Esc> when done
    s to delete char and enter insert mode, S to delete whole line
    J to join current and next line together (get rid of \n)
    x to delete char, X to delete backwards
    dd to delete line, D to delete to EOL
    dMOTION to delete over MOTION
    . repeats the last insert, change, deletion
    << to shift one shiftwidth left, >> right (combine with motion)

jumping:
    fCHAR to jump to CHAR, F to go back, t to go just until, T to go back just until
    ; repeat last of the above once, , does it in opposite direction
    :N or N then Shift-g/gg to jump to line N
    gg to first line, G to last line
    0 to start of line, $ to end, ^ to first text
    w to jump forward a word, e to jump to end of word, b to go back a word
    capitalize the above to deal with [W]ords (contains special chars)
    % to jump between matching (, [, {
    H to jump to top of screen, M to middle, L to bottom
    g; to go backwards in changelist, g, to go forward
    mark text with mCHAR, jump to mark with `CHAR, begining of line with mark with 'CHAR

undo and redo:
    u to undo last edit
    U to undo all edits for a line since entering that line
    Ctrl-r to redo

yank and put:
    y to yank selection from visual mode, or yMOTION
    yy to yank entire line
    p to put yank or last deletion after/below, P above/before
    check the + and * registers for copying to sys clipboard (set in my vimrc)

find and replace:
    / to search forward, ? to search backwards
    * to search for word under cursor forwards, # backwards
    :set ic to ignore case, :set noic to consider case
    :set is to search as you type, :set nois to turn off
    :set hls to highlight search results, :set nohls to turn off
    use \c at the end of search to ignore case for that search
    n to next occurrence, N to previous
    Ctrl-o to got back where you came from, Ctrl-i to go forward
    :s/OLD/NEW/g to do search and replace on whole line
    :s/OLD/NEW to search and replace on first occurence in line
    :#,#s/OLD/NEW/g where #,# are line nums to do substition in
    :%s/OLD/NEW/g to change every occurrence in file
    :%s/OLD/NEW/gc to do above with confirmation on each change
    searches work as motions (i.e. d/foo to delete until foo)
    :%s/<PATTERN>/<ACTION> to do action on every line matching pattern, g! for every line not matching

windows:
    C-w C-w to jump around windows, = in vimrc to do the same
    also C-w arrow
    C-w c to close current window
    C-w o to close all but current window
    :new to split horizontal, :vnew for vertical
    :vert sb N to open buffer N in new vertical window, :sb N for horizontal

buffers:
    :set hidden for hidden buffers
    :ls to list buffers
    :bn for next, :bp for previous
    :bd to delete buffer
    :b N to go to buffer N
    - set in vimrc to jump to next buffer

completion:
    Note: completion is best served with a plugin
    C-n for next completion
    C-p for previous

visual mode stuff:
    v to enter visual mode
    gv to select previous visual selection
    shift-v or V to enter visual line mode
    ctrl-V or ^v to enter visual block mode
    select lines to manipulate
    d to delete, y to yank
    :norm executes normal mode commands, useful for commenting and indentation changes
    :norm i# to insert # at BOL, I# at first non-whitespace
    :norm ^x to delete one, ^xx to delete two (//)

macros:
    press q followed by a letter a-z to start recording a macro
    the letter you pick a-z is the register where the macro is stored
    start entering any commands you wish (other than q)
    press q to finish recording the macro
    play the macro by hitting @ plus the register you specified, @@ replays last macro

misc:
    visually select numbers and do g<c-a> to order them, g<c-x> to decrement them
    :sort sorts a selection, :sort u sorts and dedupes
    :reg to list registers and values
    diff two windows with :windo :diffthis
