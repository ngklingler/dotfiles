import shutil as _shutil
import sys as _sys
import os as _os
# source $HOME/dotfiles/machine.sh?

$SHELL = _sys.argv[0]
$CASE_SENSITIVE_COMPLETIONS = False
$PROMPT = '{env_name}{BOLD_GREEN} {short_cwd}{NO_COLOR} {BOLD_BLUE}{prompt_end}{NO_COLOR} '
# $BOTTOM_TOOLBAR = '{BOLD_GREEN}{user}@{hostname} {cwd} {gitstatus} {current_job} {localtime}                                            '
_path_add = [
    f'{$HOME}/.cargo/bin',
    f'{$HOME}/.local/bin',
] + $PATH
$PATH = [j for i, j in enumerate(_path_add) if j not in _path_add[:i] and _os.path.exists(j)]

if 'NVIM_LISTEN_ADDRESS' in ${...} and not _shutil.which('nvr'):
    print('installing nvr')
    xpip install neovim-remote

if 'TMUX' not in ${...} and _shutil.which('tmux'):
    with _os.popen("tmux ls -F '#{session_attached}#{session_name}' 2> /dev/null") as cmd:
        sessions = cmd.read().splitlines()
    for s in sessions:
        if len(s) and s[0] == '0':
            tmux a -t @(s[1])
            break
    else:
        tmux

_which_first = lambda x: list(filter(bool, map(_shutil.which, x)))[0]
vis = ['nvim', 'vim', 'vi']
if 'NVIM_LISTEN_ADDRESS' in ${...}:
    vis.insert(0, 'nvr')
aliases.update({
    'df': 'df -h',
    'free': 'free -m',
    'vi': _which_first(vis),
    'py': _which_first(['ipython', 'python3', 'python']),
    # 'ls': 'lsd', # deprecated or programatic?
    'notes': 'vi ~/notes', # used or deprecated?
})
$EDITOR=_which_first(vis)
$VISUAL=$EDITOR
$GIT_EDITOR=$EDITOR
$MYVIMRC=f'{$HOME}/.vimrc'
# $EDITOR = aliases['vi'][0] if type(aliases['vi']) == list else aliases['vi']

@events.on_chdir
def _cd_events(olddir, newdir, **kw):
    ls
    'NVIM_LISTEN_ADDRESS' in ${...} and nvr --remote-send f'<esc>:cd {newdir}<cr>i'

